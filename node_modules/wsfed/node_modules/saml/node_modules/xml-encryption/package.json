{
  "name": "xml-encryption",
  "version": "0.1.0",
  "devDependencies": {
    "mocha": "*",
    "should": "~1.2.2"
  },
  "main": "./lib",
  "repository": {
    "type": "git",
    "url": "https://github.com/auth0/node-xml-encryption"
  },
  "keywords": [
    "xml",
    "encryption",
    "xmlenc"
  ],
  "author": {
    "name": "Matias Woloski",
    "url": "Auth0"
  },
  "license": "MIT",
  "dependencies": {
    "xmldom": "~0.1.15",
    "ursa": "~0.8.0",
    "ejs": "~0.8.3",
    "async": "~0.2.7",
    "xpath": "0.0.5"
  },
  "scripts": {
    "test": "mocha"
  },
  "readme": "W3C XML Encryption implementation for node.js (http://www.w3.org/TR/xmlenc-core/)\n\n## Usage\n\n    npm install xml-encryption\n\n### encrypt\n\n    var xmlenc = require('xmlenc');\n    \n    var options = {\n      rsa_pub: fs.readFileSync(__dirname + '/your_rsa.pub'),\n      pem: fs.readFileSync(__dirname + '/your_public_cert.pem'),\n      encryptionAlgorithm: 'http://www.w3.org/2001/04/xmlenc#aes-256-cbc',\n      keyEncryptionAlgorighm: 'http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p'\n    };\n\n    xmlenc.encrypt('content to encrypt', options, function(err, result) { \n        console.log(result);\n    }\n\n    // result\n    \n    <xenc:EncryptedData Type=\"http://www.w3.org/2001/04/xmlenc#Element\" xmlns:xenc=\"http://www.w3.org/2001/04/xmlenc#\">\n      <xenc:EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#aes-256-cbc\" />\n        <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">\n          <e:EncryptedKey xmlns:e=\"http://www.w3.org/2001/04/xmlenc#\">\n            <e:EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\">\n              <DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\" />\n            </e:EncryptionMethod>\n            <KeyInfo>\n              <X509Data><X509Certificate>MIIEDzCCAveg... base64 cert... q3uaLvlAUo=</X509Certificate></X509Data>\n            </KeyInfo>\n            <e:CipherData>\n              <e:CipherValue>sGH0hhzkjmLWYYY0gyQMampDM... encrypted symmetric key ...gewHMbtZafk1MHh9A==</e:CipherValue>\n            </e:CipherData>\n          </e:EncryptedKey>\n        </KeyInfo>\n        <xenc:CipherData>\n            <xenc:CipherValue>V3Vb1vDl055Lp92zvK..... encrypted content.... kNzP6xTu7/L9EMAeU</xenc:CipherValue>\n        </xenc:CipherData>\n    </xenc:EncryptedData>\n\n### decrypt\n\n\n    var options = {\n        key: fs.readFileSync(__dirname + '/your_private_key.key'),\n    };\n\n    xmlenc.decrypt('<xenc:EncryptedData ..... </xenc:EncryptedData>', options, function(err, result) { \n        console.log(result);\n    }\n\n    // result\n\n    decrypted content\n\n## Supported algorithms\n\nCurrently the library supports:\n\n* EncryptedKey to transport symmetric key using http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\n* EncryptedData using http://www.w3.org/2001/04/xmlenc#aes-256-cbc\n\nHowever, you can fork and implement your own algorithm. The code supports adding more algorithms easily\n",
  "readmeFilename": "README.md",
  "description": "W3C XML Encryption implementation for node.js (http://www.w3.org/TR/xmlenc-core/)",
  "bugs": {
    "url": "https://github.com/auth0/node-xml-encryption/issues"
  },
  "_id": "xml-encryption@0.1.0",
  "dist": {
    "shasum": "67b5c111da3459d7c1d4b0349ea0f4951adf3991"
  },
  "_from": "xml-encryption@~0.1.0",
  "_resolved": "https://registry.npmjs.org/xml-encryption/-/xml-encryption-0.1.0.tgz"
}
