{
  "name": "passport-windowsauth",
  "version": "0.1.8",
  "description": "Passport strategy for Windows Integrated Authentication (NTLM)",
  "main": "lib/strategy.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/auth0/passport-windowsauth.git"
  },
  "keywords": [
    "passport",
    "windows",
    "auth",
    "ntlm"
  ],
  "author": {
    "name": "Auth0"
  },
  "license": "MIT",
  "dependencies": {
    "passport": "~0.1.15",
    "ldapjs": "https://github.com/auth0/node-ldapjs/tarball/master"
  },
  "devDependencies": {
    "chai": "~1.5.0",
    "mocha": "~1.8.2"
  },
  "readme": "Windows Authentication strategy for Passport.js.\n\n## Install\n\n    npm install passport-windowsauth\n\n## Introduction\n\nThis module authenticate user with a LDAP directory. It works in two modes **Integrated Authentication** (often refer as NTLM) or **Form Authentication**.\n\n## Integrated Authentication (IIS)\n\nIn this mode, this strategy reads an special server variable from IIS (more info about this [here](https://github.com/tjanczuk/iisnode/issues/87)) and then generate a profile. You can **optionally** pass LDAP credentials to fetch the profile from Active Directory. \n\n**In your IIS application authentication settings, disable Anonymous and enable Windows Authentication.**\n\nIf you want to use it with LDAP:\n\n~~~javascript\nvar passport = require('passport');\nvar WindowsStrategy = require('passport-windowsauth');\n\npassport.use(new WindowsStrategy({ \n  ldap: {\n    url:             'ldap://wellscordoba.wellscordobabank.com/DC=wellscordobabank,DC=com',\n    base:            'DC=wellscordobabank,DC=com',\n    bindDN:          'someAccount',\n    bindCredentials: 'andItsPass'\n  }\n}, function(profile, done){\n  User.findOrCreate({ waId: profile.id }, function (err, user) {\n    done(err, user);\n  });\n}));\n~~~\n\nIf you want to use without LDAP:\n\n~~~javascript\nvar passport = require('passport');\nvar WindowsStrategy = require('passport-windowsauth');\n\npassport.use(function(profile, done){\n  User.findOrCreate({ waId: profile.id }, function (err, user) {\n    done(err, user);\n  });\n}));\n~~~\n\nNOTE: in this case profile only has ```displayName``` and ```id```, and the two variables with the same value.\n\nThen use the strategy in a route as follows:\n\n~~~javascript\napp.get('/express-passport', \n  passport.authenticate('WindowsAuthentication'),\n  function (req, res){\n    res.json(req.user);\n  });\n~~~\n\n## Integrated Authentication with Apache and mod_auth_kerb\n\nYou can take advantage of [mod_auth_kerb](http://modauthkerb.sourceforge.net/) in linux by using apache as a reverse proxy to your node application. The configuration is not a _walk in the park_ but after you have everything configured it just works.\n\n####1-Generate a keytab in windows\n\n~~~\nktpass\n-princ service/server.CONTOSO.COM@CONTOSO.COM\n-mapuser user@CONTOSO.COM\n-crypto RC4-HMAC-NT\n-ptype KRB5_NT_PRINCIPAL\n-pass passssswwword\n-out FILE.keytab\n~~~\n\n####2-Check your /etc/krb5.conf\n\n~~~\nkinit user@CONTOSO.COM\n~~~\n\nYou should be able to login from the linux machine.\n\n####3-Check your keytab is okay\n\n~~~\nkinit -V -kt FILE.keytab service/server.CONTOSO.COM@CONTOSO.COM\n~~~\n\n####4-Install apache with the modules \n\nThe modules you need are `mod-auth-kerb`, `proxy`, `proxy_http`, `headers`, `rewrite`.\n\n####5-Configure your apache\n\n~~~\n<VirtualHost *:8001>\n  ServerAdmin webmaster@localhost\n\n  ProxyPassInterpolateEnv On\n  ProxyPass / http://localhost:3000/          # this is the node.js app\n  ProxyPassReverse / http://localhost:3000/   # this is the node.js app\n  RewriteEngine On\n  RewriteCond %{LA-U:REMOTE_USER} (.+)\n  RewriteRule . - [E=RU:%1]\n  RequestHeader set X-Forwarded-User %{RU}e\n\n  <Proxy *>\n      Order deny,allow\n      Allow from all\n  </Proxy>\n\n  <Location />\n      AuthName \"Kerberos Login\"\n      AuthType Kerberos\n      Krb5Keytab /path/to/your/FILE.keytab    # VERY IMPORTANT\n      KrbAuthRealm CONTOSO.COM\n      KrbMethodNegotiate on\n      KrbSaveCredentials off\n      KrbVerifyKDC off\n      KrbServiceName SERVICE/server.CONTOSO.COM\n      Require valid-user\n  </Location>\n\n  ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/\n  <Directory \"/usr/lib/cgi-bin\">\n    AllowOverride None\n    Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch\n    Order allow,deny\n    Allow from all\n  </Directory>\n\n  ErrorLog ${APACHE_LOG_DIR}/error.log\n\n  CustomLog ${APACHE_LOG_DIR}/access.log combined\n</VirtualHost>\n~~~ \n\n####6-Configure Passport.js\n\n~~~javascript\nvar passport = require('passport');\nvar WindowsStrategy = require('passport-windowsauth');\n\npassport.use(new WindowsStrategy({ \n  ldap: {\n    url:             'ldap://wellscordoba.wellscordobabank.com/DC=wellscordobabank,DC=com',\n    base:            'DC=wellscordobabank,DC=com',\n    bindDN:          'someAccount',\n    bindCredentials: 'andItsPass'\n  },\n  getUserNameFromHeader: function (req) {\n    //in the above apache config we set the x-forwarded-user header.\n    //mod_auth_kerb uses user@domain\n    return req.headers['x-forwarded-user'].split('@')[0];\n  }\n}, function(profile, done){\n  User.findOrCreate({ waId: profile.id }, function (err, user) {\n    done(err, user);\n  });\n}));\n~~~\n\n\n## Non-integrated authentication\n\nYou can use this module to authenticate users against a LDAP server without integrated authentication.\nYou will prompt the user for his username and password in a form like this:\n\n~~~html\n<form action=\"/login\" method=\"post\">\n    <div>\n        <label>Username:</label>\n        <input type=\"text\" name=\"username\"/>\n    </div>\n    <div>\n        <label>Password:</label>\n        <input type=\"password\" name=\"password\"/>\n    </div>\n    <div>\n        <input type=\"submit\" value=\"Log In\"/>\n    </div>\n</form>\n~~~\n\nand then have a route like this:\n\n~~~javascript\napp.post('/login',\n  passport.authenticate('WindowsAuthentication', { \n                                  successRedirect: '/',\n                                  failureRedirect: '/login',\n                                  failureFlash:    true })\n);\n~~~\n\nThe same configuration as explained above is required with the ```integrated``` option in false:\n\n~~~javascript\nvar passport = require('passport');\nvar WindowsStrategy = require('passport-windowsauth');\n\npassport.use(new WindowsStrategy({ \n  ldap: {\n    url:             'ldap://wellscordoba.wellscordobabank.com/DC=wellscordobabank,DC=com',\n    base:            'DC=wellscordobabank,DC=com',\n    bindDN:          'someAccount',\n    bindCredentials: 'andItsPass'\n  },\n  integrated:      false\n}, function(profile, done){\n  User.findOrCreate({ waId: profile.id }, function (err, user) {\n    done(err, user);\n  });\n}));\n~~~\n\n## Example profile from LDAP\n\nWhen you use the LDAP integration the profile follows the [Passport.js user profile convention](http://passportjs.org/guide/profile/) and you have also a _json property with all the profile.\n\nExample:\n\n~~~json\n{\n  \"id\": \"fe59e96-4d82-431e-816a-5a688e4ab547\",\n  \"displayName\": \"Jose Romaniello\",\n  \"name\": {\n    \"familyName\": \"Romaniello\",\n    \"givenName\": \"Jose\"\n  },\n  \"emails\": [\n    {\n      \"value\": \"jromaniello@wellscordoba.com\"\n    }\n  ],\n  \"_json\": {\n    \"dn\": \"CN=Jose Romaniello,CN=Users,DC=wellscordobabank,DC=com\",\n    \"controls\": [],\n    \"objectClass\": [\n      \"top\",\n      \"person\",\n      \"organizationalPerson\",\n      \"user\"\n    ],\n    \"cn\": \"Jose Romaniello\",\n    \"sn\": \"Romaniello\",\n    \"title\": \"cantante desafinado - programador\",\n    \"physicalDeliveryOfficeName\": \"Chief Architect\",\n    \"telephoneNumber\": \"+543519998822\",\n    \"givenName\": \"Jose\",\n    \"distinguishedName\": \"CN=Jose Romaniello,CN=Users,DC=wellscordobabank,DC=com\",\n    \"instanceType\": \"4\",\n    \"whenCreated\": \"20130220172116.0Z\",\n    \"whenChanged\": \"20130220183149.0Z\",\n    \"displayName\": \"Jose Romaniello\",\n    \"uSNCreated\": \"12717\",\n    \"uSNChanged\": \"12792\",\n    \"company\": \"Wells Cordoba Bank\",\n    \"name\": \"Jose Romaniello\",\n    \"objectGUID\": \"fe59e96-4d82-431e-816a-5a688e4ab547\",\n    \"userAccountControl\": \"66048\",\n    \"badPwdCount\": \"0\",\n    \"codePage\": \"0\",\n    \"countryCode\": \"0\",\n    \"badPasswordTime\": \"0\",\n    \"lastLogoff\": \"0\",\n    \"lastLogon\": \"0\",\n    \"pwdLastSet\": \"130058544776047558\",\n    \"primaryGroupID\": \"513\",\n    \"objectSid\": \"\\u0001\\u0005\\u0000\\u0000\\u0000\\u0000\\u0000\\u0005\\u0015\\u0000\\u0000\\u0000��=��\\u001d��uQ��O\\u0004\\u0000\\u0000\",\n    \"accountExpires\": \"9223372036854775807\",\n    \"logonCount\": \"0\",\n    \"sAMAccountName\": \"jromaniello\",\n    \"sAMAccountType\": \"805306368\",\n    \"userPrincipalName\": \"jromaniello@wellscordobabank.com\",\n    \"objectCategory\": \"CN=Person,CN=Schema,CN=Configuration,DC=wellscordobabank,DC=com\",\n    \"dSCorePropagationData\": [\n      \"20130220172118.0Z\",\n      \"16010101000000.0Z\"\n    ],\n    \"lastLogonTimestamp\": \"130058572786126285\",\n    \"mail\": \"jromaniello@wellscordobabank.com\"\n  }\n}\n~~~ \n\n\n## License\n\nMIT 2013!\n",
  "_id": "passport-windowsauth@0.1.8",
  "dist": {
    "shasum": "555a24ab7656f3cd41860683e0cd89a4b12ab063"
  },
  "_from": "passport-windowsauth@~0.1.5"
}
